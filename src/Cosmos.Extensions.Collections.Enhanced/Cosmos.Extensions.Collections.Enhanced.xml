<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cosmos.Extensions.Collections.Enhanced</name>
    </assembly>
    <members>
        <member name="M:Cosmos.Collections.Pages.OfPage``1(System.Linq.IQueryable{``0},System.Int32,System.Int32)">
            <summary>
            Queryable page from the given collection by page number and page size. <br />
            按页码和页面大小从给定集合中查询的页面。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="queryable">data from database</param>
            <param name="pageNumber">page number</param>
            <param name="itemCountPerPage">page size</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pages.OfPage``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            Enumerable page from the given collection by page number and page size. <br />
            按页码和页面大小从给定集合中可枚举的页面。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumerable">data in memory</param>
            <param name="pageNumber">page number</param>
            <param name="itemCountPerPage">page size</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pages.OfPageSet``1(System.Collections.Generic.IEnumerable{``0},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Create a page set from the given collection with page size and member count limit. <br />
            从给定的集合中创建一个具有页面大小和成员数量限制的页面集。
            </summary>
            <param name="enumerable"></param>
            <param name="pageSize"></param>
            <param name="limitedMemberCount"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pages.OfPageSet``1(System.Linq.IQueryable{``0},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Create a page set from the given collection with page size and member count limit. <br />
            从给定的集合中创建一个具有页面大小和成员数量限制的页面集。
            </summary>
            <param name="queryable"></param>
            <param name="pageSize"></param>
            <param name="limitedMemberCount"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pages.OfPageMember``1(``0,System.Int32,System.Int32@)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Collections.Pagination.PageMember`1"/> <br />
            创建 <see cref="T:Cosmos.Collections.Pagination.PageMember`1"/> 的新实例
            </summary>
            <param name="memberValue"></param>
            <param name="offset"></param>
            <param name="startIndex"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pages.OfPageMember``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32,System.Int32@)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Collections.Pagination.PageMember`1"/> <br />
            创建 <see cref="T:Cosmos.Collections.Pagination.PageMember`1"/> 的新实例
            </summary>
            <param name="memberColl"></param>
            <param name="index"></param>
            <param name="offset"></param>
            <param name="startIndex"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pages.OfPageMember``1(Cosmos.Collections.Pagination.IQueryEntryState{``0},System.Int32,System.Int32@)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Collections.Pagination.PageMember`1"/> <br />
            创建 <see cref="T:Cosmos.Collections.Pagination.PageMember`1"/> 的新实例
            </summary>
            <param name="state"></param>
            <param name="offset"></param>
            <param name="startIndex"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Collections.Pagination.EmptyPage`1">
            <summary>
            Empty page <br />
            空页
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Collections.Pagination.EmptyPage`1.#ctor">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Collections.Pagination.EmptyPage`1"/>
            </summary>
        </member>
        <member name="T:Cosmos.Collections.Pagination.EnumerablePage`1">
            <summary>
            Enumerable page
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Collections.Pagination.EnumerablePage`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Enumerable page
            </summary>
            <param name="enumerable"></param>
            <param name="currentPageNumber"></param>
            <param name="pageSize"></param>
            <param name="totalMemberCount"></param>
            <param name="sourceIsFull"></param>
        </member>
        <member name="M:Cosmos.Collections.Pagination.EnumerablePage`1.Empty">
            <summary>
            Get empty page
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pagination.Internals.PageableCollectionFactory.GetRealMemberCountFunc">
            <summary>
            Get real member count<br />.
            first parameter(l) means limitedMemberCount<br />,
            second parameter(c) means count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pagination.Internals.PageableCollectionFactory.GetRealPageCountFunc">
            <summary>
            Get real page count<br />.
            first parameter(m) means real member count, which has been gotten from <see cref="M:Cosmos.Collections.Pagination.Internals.PageableCollectionFactory.GetRealMemberCountFunc"/><br />,
            second parameter(s) means page size.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pagination.Internals.PageableCollectionFactory.CreatePageSet``1(System.Collections.Generic.IEnumerable{``0},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Make enumerable result to EnumerablePage collection
            </summary>
            <typeparam name="T">element type of your enumerable result</typeparam>
            <param name="enumerable">original enumerable result</param>
            <param name="pageSize">page size</param>
            <param name="limitedMemberCount">limited member count</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pagination.Internals.PageableCollectionFactory.CreatePageSet``1(System.Linq.IQueryable{``0},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Make queryable source to QueryablePage collection
            </summary>
            <typeparam name="T">element type of your queryable source</typeparam>
            <param name="queryable">original queryable result</param>
            <param name="pageSize">page size</param>
            <param name="limitedMemberCount">limited member count</param>
            <returns></returns>
        </member>
        <member name="F:Cosmos.Collections.Pagination.Internals.PageableConstants.DEFAULT_PAGE_SIZE">
            <summary>
            Default page size
            </summary>
        </member>
        <member name="F:Cosmos.Collections.Pagination.Internals.PageableConstants.MAX_MEMBER_ITEMS_SUPPORT">
            <summary>
            Max member items support
            </summary>
        </member>
        <member name="T:Cosmos.Collections.Pagination.Internals.PageMemberFactory">
            <summary>
            Page member factory
            </summary>
        </member>
        <member name="M:Cosmos.Collections.Pagination.Internals.PageMemberFactory.Create``1(``0,System.Int32,System.Int32@)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Collections.Pagination.PageMember`1"/>
            </summary>
            <param name="memberValue"></param>
            <param name="offset"></param>
            <param name="startIndex"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pagination.Internals.PageMemberFactory.Create``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32,System.Int32@)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Collections.Pagination.PageMember`1"/>
            </summary>
            <param name="memberColl"></param>
            <param name="index"></param>
            <param name="offset"></param>
            <param name="startIndex"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pagination.Internals.PageMemberFactory.Create``1(Cosmos.Collections.Pagination.IQueryEntryState{``0},System.Int32,System.Int32@)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Collections.Pagination.PageMember`1"/>
            </summary>
            <param name="state"></param>
            <param name="offset"></param>
            <param name="startIndex"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Collections.Pagination.Internals.QueryEntryState`1">
            <summary>
            Query entry state
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Collections.Pagination.Internals.QueryEntryState`1.#ctor(System.Linq.IQueryable{`0},System.Int32,System.Int32)">
            <summary>
            Query entry state
            </summary>
            <param name="queryable">Orgin queryable result</param>
            <param name="skip">skip number</param>
            <param name="take">take number</param>
        </member>
        <member name="P:Cosmos.Collections.Pagination.Internals.QueryEntryState`1.AllValues">
            <summary>
            Get all value.
            </summary>
        </member>
        <member name="T:Cosmos.Collections.Pagination.IPage">
            <summary>
            Page interface <br />
            页接口
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.IPage.TotalPageCount">
            <summary>
            Gets total page count <br />
            获取总页数
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.IPage.TotalMemberCount">
            <summary>
            Gets total member count <br />
            获取总项数
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.IPage.CurrentPageNumber">
            <summary>
            Gets current page number <br />
            获取当前页码
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.IPage.PageSize">
            <summary>
            Gets page size <br />
            获取页尺寸
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.IPage.CurrentPageSize">
            <summary>
            Gets current page size, may equal to or less than page size. <br />
            获取当前页尺寸，将小于等于页尺寸
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.IPage.HasPrevious">
            <summary>
            Has previous. If this page is the first page, then returns false. <br />
            标记是否有上一页。如果本页为第一页，则返回 false。
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.IPage.HasNext">
            <summary>
            Has next. If this page is the last page, then returns false. <br />
            标记是否有下一页。如果本页为最后一页，则返回 false。
            </summary>
        </member>
        <member name="M:Cosmos.Collections.Pagination.IPage.GetMetadata">
            <summary>
            Get metadata of page <br />
            获取页的元信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Collections.Pagination.IPageable">
            <summary>
            Pageable interface <br />
            分页接口
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.IPageable.PageSize">
            <summary>
            Gets page size <br />
            获取页尺寸
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.IPageable.MemberCount">
            <summary>
            Gets member count <br />
            获取成员项数
            </summary>
        </member>
        <member name="T:Cosmos.Collections.Pagination.IPageable`1">
            <summary>
            Pageable interface <br />
            分页接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Collections.Pagination.IPageable`1.GetPage(System.Int32)">
            <summary>
            Get page <br />
            获取指定页码的页
            </summary>
            <param name="pageNumber">Page number</param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Collections.Pagination.IPageMember`1">
            <summary>
            Page member wrapper interface <br />
            页成员包装接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Cosmos.Collections.Pagination.IPageMember`1.Value">
            <summary>
            Gets value of current member <br />
            获取当前项的值
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.IPageMember`1.Offset">
            <summary>
            Gets offset of current member <br />
            获取当前项的偏移量
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.IPageMember`1.ItemNumber">
            <summary>
            Gets item number of current member <br />
            获取当前项的序号
            </summary>
        </member>
        <member name="T:Cosmos.Collections.Pagination.IPage`1">
            <summary>
            Page interface <br />
            页接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Cosmos.Collections.Pagination.IPage`1.Item(System.Int32)">
            <summary>
            Gets page member indexer <br />
            获取当前页的某一项
            </summary>
            <param name="index">Index</param>
        </member>
        <member name="M:Cosmos.Collections.Pagination.IPage`1.ToOriginalItems">
            <summary>
            Convert to original items <br />
            转换为页内项的集合
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Collections.Pagination.IQueryEntryState`1">
            <summary>
            Query entry state interface <br />
            查询状态接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Cosmos.Collections.Pagination.IQueryEntryState`1.AllValues">
            <summary>
            Gets all values <br />
            获取所有值
            </summary>
        </member>
        <member name="T:Cosmos.Collections.Pagination.LimitedMembersTypes">
            <summary>
            Limited members type <br />
            成员项限制类型
            </summary>
        </member>
        <member name="F:Cosmos.Collections.Pagination.LimitedMembersTypes.Unlimited">
            <summary>
            Unlimited <br />
            不限制
            </summary>
        </member>
        <member name="F:Cosmos.Collections.Pagination.LimitedMembersTypes.Customize">
            <summary>
            Customize <br />
            自定义
            </summary>
        </member>
        <member name="T:Cosmos.Collections.Pagination.PageableEnumerable`1">
            <summary>
            EnumerablePage collection <br />
            分页集合
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageableEnumerable`1.GetSpecifiedPage(System.Int32,System.Int32,System.Int32)">
            <summary>
            Get special page <br />
            获得指定的页
            </summary>
            <param name="currentPageNumber"></param>
            <param name="pageSize"></param>
            <param name="realMemberCount"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Collections.Pagination.PageableQueryable`1">
            <summary>
            QueryablePage collection <br />
            可查询分页集合
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageableQueryable`1.GetSpecifiedPage(System.Int32,System.Int32,System.Int32)">
            <summary>
            Get special page <br />
            获得指定页
            </summary>
            <param name="currentPageNumber"></param>
            <param name="pageSize"></param>
            <param name="realMemberCount"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Collections.Pagination.PageableSetBase`1">
            <summary>
            Abstract PageableSet base <br />
            抽象的分页集合
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Cosmos.Collections.Pagination.PageableSetBase`1._lazyPinedPagesCache">
            <summary>
            Lazy pined paged cache.
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageableSetBase`1._limitedType">
            <summary>
            Gets limited type
            </summary>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageableSetBase`1.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageableSetBase`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageableSetBase`1.PageSize">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageableSetBase`1.MemberCount">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageableSetBase`1.LimitedMemberCount">
            <summary>
            Gets limited member count <br />
            获取限制后的成员项数
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageableSetBase`1.PageCount">
            <summary>
            Gets page count <br />
            获得页的总数
            </summary>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageableSetBase`1.GetPage(System.Int32)">
            <summary>
            Get specific page from current PaginableSet <br />
            从当前分页集合中获取指定的页
            </summary>
            <param name="pageNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageableSetBase`1.GetSpecifiedPage(System.Int32,System.Int32,System.Int32)">
            <summary>
            Get specified page <br />
            获取指定的页
            </summary>
            <param name="currentPageNumber"></param>
            <param name="pageSize"></param>
            <param name="realMemberCount"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Collections.Pagination.PageableSettings">
            <summary>
            Pageable settings <br />
            分页配置
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageableSettings.DefaultPageSize">
            <summary>
            Gets or sets default page size <br />
            获取或设置默认的页尺寸
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageableSettings.MaxMemberItems">
            <summary>
            Gets or sets max member items <br />
            获取或设置最大页成员项数
            </summary>
        </member>
        <member name="T:Cosmos.Collections.Pagination.PageableSettingsManager">
            <summary>
            Pageable settings manager <br />
            分页配置管理器
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageableSettingsManager.Settings">
            <summary>
            Get pageable settings <br />
            获取分页配置
            </summary>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageableSettingsManager.UpdateSettings(Cosmos.Collections.Pagination.PageableSettings)">
            <summary>
            Update pageable settings <br />
            更新分页配置
            </summary>
            <param name="settings"></param>
        </member>
        <member name="T:Cosmos.Collections.Pagination.PageBase`1">
            <summary>
            Abstract page base <br />
            抽象的页基类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Cosmos.Collections.Pagination.PageBase`1._memberList">
            <summary>
            Member list <br />
            成员项列表
            </summary>
        </member>
        <member name="F:Cosmos.Collections.Pagination.PageBase`1._initializeAction">
            <summary>
            Initialize action <br />
            初始化动作
            </summary>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageBase`1.#ctor(System.Boolean)">
            <summary>
            Page base <br />
            页基类
            </summary>
            <param name="sourceIsFull"></param>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageBase`1.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageBase`1.SourceIsFull">
            <summary>
            Offset mode <br />
            偏移量模式
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageBase`1.TotalPageCount">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageBase`1.TotalMemberCount">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageBase`1.CurrentPageNumber">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageBase`1.PageSize">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageBase`1.CurrentPageSize">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageBase`1.HasPrevious">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageBase`1.HasNext">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageBase`1.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageBase`1.GetMetadata">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageBase`1.ToOriginalItems">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Collections.Pagination.PageExtensions">
            <summary>
            Extensions for page <br />
            页扩展
            </summary>
            <summary>
            Extensions for solid page <br />
            固定页扩展
            </summary>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageExtensions.IsFirst(Cosmos.Collections.Pagination.IPage)">
            <summary>
            Is current page thr first page? <br />
            当前页是否为第一页
            </summary>
            <param name="page">Page</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageExtensions.IsLast(Cosmos.Collections.Pagination.IPage)">
            <summary>
            Is current page the last page? <br />
            当前页是否为最后一页
            </summary>
            <param name="page">Page</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageExtensions.FromMemberNumber(Cosmos.Collections.Pagination.IPage)">
            <summary>
            The number of the first item of current page. <br />
            获取当前页第一个成员项的序号
            </summary>
            <param name="page">Page</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageExtensions.ToMemberNumber(Cosmos.Collections.Pagination.IPage)">
            <summary>
            The number of the last item of current page. <br />
            获取当前页最后一个成员项的序号
            </summary>
            <param name="page">Page</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageExtensions.AsPageable``1(System.Collections.Generic.IEnumerable{``0},System.Nullable{System.Int32})">
            <summary>
            Make original enumerable result to EnumerablePage collection. <br />
            将一个原始集合转换为可分页的集合
            </summary>
            <typeparam name="T">element type of your enumerable result</typeparam>
            <param name="enumerable">original enumerable result</param>
            <param name="limitedMemberCount">limited member count</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageExtensions.AsPageable``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Nullable{System.Int32})">
            <summary>
            Make original enumerable result to EnumerablePage collection. <br />
            将一个原始集合转换为可分页的集合
            </summary>
            <typeparam name="T">element type of your enumerable result</typeparam>
            <param name="enumerable">original enumerable result</param>
            <param name="pageSize">page size</param>
            <param name="limitedMemberCount">limited member count</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageExtensions.GetPage``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Get specific page from original enumerable result <br />
            从一个原始集合中获取指定页
            </summary>
            <typeparam name="T">element type of your enumerable result</typeparam>
            <param name="enumerable">original enumerable result</param>
            <param name="pageNumber">page number</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageExtensions.GetPage``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            Get specific page from original enumerable result <br />
            从一个原始集合中获取指定页
            </summary>
            <typeparam name="T">element type of your enumerable result</typeparam>
            <param name="enumerable">original enumerable result</param>
            <param name="pageNumber">page number</param>
            <param name="pageSize">page size</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageExtensions.AsPageable``1(System.Linq.IQueryable{``0},System.Nullable{System.Int32})">
            <summary>
            Make original queryable source to QueryablePage collection. <br />
            将一个可查询集合转换为可分页的集合
            </summary>
            <typeparam name="T">element type of your queryable source</typeparam>
            <param name="queryable">original queryable result</param>
            <param name="limitedMemberCount">limited member count</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageExtensions.AsPageable``1(System.Linq.IQueryable{``0},System.Int32,System.Nullable{System.Int32})">
            <summary>
            Make original queryable source to QueryablePage collection. <br />
            将一个可查询集合转换为可分页集合
            </summary>
            <typeparam name="T">element type of your queryable source</typeparam>
            <param name="queryable">original queryable result</param>
            <param name="pageSize">page size</param>
            <param name="limitedMemberCount">limited member count</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageExtensions.GetPage``1(System.Linq.IQueryable{``0},System.Int32)">
            <summary>
            Get specific page from original queryable source <br />
            从一个可分页集合中获得指定页
            </summary>
            <typeparam name="T">element type of your queryable source</typeparam>
            <param name="queryable">original queryable result</param>
            <param name="pageNumber">page number</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageExtensions.GetPage``1(System.Linq.IQueryable{``0},System.Int32,System.Int32)">
            <summary>
            Get specific page from original queryable source <br />
            从一个可分页集合中获得指定页
            </summary>
            <typeparam name="T">element type of your queryable source</typeparam>
            <param name="queryable">original queryable result</param>
            <param name="pageNumber">page number</param>
            <param name="pageSize">page size</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageExtensions.GetPageAsync``1(System.Threading.Tasks.Task{System.Linq.IQueryable{``0}},System.Int32)">
            <summary>
            Get specific page from original queryable source <br />
            异步地从一个可分页集合中获得指定页
            </summary>
            <typeparam name="T">element type of your queryable source</typeparam>
            <param name="queryableTask"></param>
            <param name="pageNumber">page number</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageExtensions.GetPageAsync``1(System.Threading.Tasks.Task{System.Linq.IQueryable{``0}},System.Int32,System.Int32)">
            <summary>
            Get specific page from original queryable source <br />
            异步地从一个可分页集合中获得指定页
            </summary>
            <typeparam name="T">element type of your queryable source</typeparam>
            <param name="queryableTask"></param>
            <param name="pageNumber">page number</param>
            <param name="pageSize">page size</param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Collections.Pagination.PageMember`1">
            <summary>
            Page member <br />
            页成员
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageMember`1.Value">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageMember`1.Offset">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageMember`1.ItemNumber">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Collections.Pagination.PageMetadata">
            <summary>
            Page metadata <br />
            页元信息
            </summary>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageMetadata.#ctor(Cosmos.Collections.Pagination.IPage)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Collections.Pagination.PageMetadata"/>.
            </summary>
            <param name="page"></param>
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageMetadata.TotalPageCount">
            <summary>
            Gets total page count <br />
            获取页总数。如果总项数为 0，则返回 1（默认存在一页，空页）
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageMetadata.RealPageCount">
            <summary>
            Gets real page count <br />
            获取实际页总数。如果总项数为 0，则返回 0（表示不存在任何页）
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageMetadata.TotalMemberCount">
            <summary>
            Gets total member count <br />
            获取总项数
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageMetadata.CurrentPageNumber">
            <summary>
            Gets current page number <br />
            获取当前页项数
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageMetadata.PageSize">
            <summary>
            Gets page size <br />
            获取页尺寸
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageMetadata.CurrentPageSize">
            <summary>
            Gets current page size <br />
            获取当前页尺寸
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageMetadata.HasPrevious">
            <summary>
            Has previous. If this page is the first page, then returns false. <br />
            是否存在上一页。如果当前页是第一页，则返回 false。
            </summary>
        </member>
        <member name="P:Cosmos.Collections.Pagination.PageMetadata.HasNext">
            <summary>
            Has next. If this page is the last page, then returns false. <br />
            是否存在下一页。如果当前页是最后一页，则返回 false。
            </summary>
        </member>
        <member name="M:Cosmos.Collections.Pagination.PageMetadata.ToString">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Collections.Pagination.QueryablePage`1">
            <summary>
            Queryable page <br />
            可查询的页
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Collections.Pagination.QueryablePage`1.#ctor(System.Linq.IQueryable{`0},System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Queryable page <br />
            可查询的页
            </summary>
            <param name="queryable"></param>
            <param name="currentPageNumber"></param>
            <param name="pageSize"></param>
            <param name="totalMemberCount"></param>
            <param name="sourceIsFull"></param>
        </member>
        <member name="M:Cosmos.Collections.Pagination.QueryablePage`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32,System.Int32)">
            <summary>
            Queryable page <br />
            可查询的页
            </summary>
            <param name="enumerable"></param>
            <param name="currentPageNumber"></param>
            <param name="pageSize"></param>
            <param name="totalMembersCount"></param>
        </member>
        <member name="M:Cosmos.Collections.Pagination.QueryablePage`1.Empty">
            <summary>
            Get empty page <br />
            获取空页
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
