<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cosmos.Extensions.Text</name>
    </assembly>
    <members>
        <member name="T:Cosmos.Text.AdditionalStringExtensions">
            <summary>
            Additional <see cref="T:System.String" /> extensions. <br />
            额外的字符串扩展
            </summary>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.ContainsChinese(System.String)">
            <summary>
            Determine whether the specified text contains Chinese characters.<br />
            判断指定文本是否包含中文汉字。
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.ContainsNumber(System.String)">
            <summary>
            Determine whether the specified text contains numbers.<br />
            判断指定文本是否包含数字。
            </summary>
            <param name="text">文本</param>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.ContainsWholeWord(System.String,System.String)">
            <summary>
            Determine whether the specified text contains the given word. <br />
            This check will ignore the case.<br />
            判断指定文本是否包含给定的单词（word），此次检查将忽略大小写。
            </summary>
            <param name="text"></param>
            <param name="toCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.ContainsAnyWholeWord(System.String,System.String[])">
            <summary>
            Determine whether the specified text contains any given word. <br />
            This check will ignore case. <br />
            判断指定文本是否包含给定的任意一个单词（word）。此次检查将忽略大小写。
            </summary>
            <param name="text"></param>
            <param name="toCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.ContainsWholePhrase(System.String,System.String)">
            <summary>
            Determine whether the specified text completely contains a given phrase
            (a phrase can contain several words and non-letter content). <br />
            This check will ignore case.<br />
            判断指定文本是否完整包含给定的一个短语（短语可以包含若干个单词和非字母内容）。此次检查将忽略大小写。
            </summary>
            <param name="text"></param>
            <param name="toCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.ContainsWholePhraseAny(System.String,System.String[])">
            <summary>
            Determine whether the specified text completely contains any given phrase
            (phrase can contain several words and non-letter content). <br />
            This check will ignore case. <br />
            判断指定文本是否完整包含给定的任意一个短语（短语可以包含若干个单词和非字母内容）。此次检查将忽略大小写。
            </summary>
            <param name="text"></param>
            <param name="toCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.ContainsWholePhraseAll(System.String,System.String[])">
            <summary>
            Determine whether the specified text completely contains all the given phrases
            (phrases can contain several words and non-letter content). <br />
            This check will ignore case. <br />
            判断指定文本是否完整包含给定的所有短语（短语可以包含若干个单词和非字母内容）。此次检查将忽略大小写。
            </summary>
            <param name="text"></param>
            <param name="toCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.ContainsIgnoreCase(System.String,System.String)">
            <summary>
            Determine whether the specified text contains the given text. <br />
            This check will ignore case.<br />
            判断指定文本是否包含给定的文本，此次检查将忽略大小写。
            </summary>
            <param name="text"></param>
            <param name="toCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.ContainsAnyIgnoreCase(System.String,System.String[])">
            <summary>
            Determine whether the specified text contains any given text. <br />
            This check will ignore the case. <br />
            判断指定文本是否包含给定的任意一个文本，此次检查将忽略大小写。
            </summary>
            <param name="text"></param>
            <param name="toCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.ContainsAllIgnoreCase(System.String,System.String[])">
            <summary>
            Determine whether the specified text contains all given texts. <br />
            This check will ignore the case. <br />
            判断指定文本是否包含给定的所有文本，此次检查将忽略大小写。
            </summary>
            <param name="text"></param>
            <param name="toCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.ContainsOnlyThisChar(System.String,System.Char)">
            <summary>
            Determine whether there are only given characters in the specified text. <br />
            判断指定文本内是否只存在给定的字符。
            </summary>
            <param name="text"></param>
            <param name="toCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.FindFirstPhrase(System.String,System.String[])">
            <summary>
            Find and retrieve the first phrase that meets the requirements from the specified text.<br />
            从指定文本中查找第一个满足要求的短语。
            </summary>
            <param name="text"></param>
            <param name="phrasesToCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.FindFirstOccurrence(System.String,System.String[])">
            <summary>
            Find first occurrence
            </summary>
            <param name="text"></param>
            <param name="toCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.FindAndReplaceFirstOccurrence(System.String,System.String,System.String[])">
            <summary>
            Find and replace first occurrence
            </summary>
            <param name="text"></param>
            <param name="newValue"></param>
            <param name="oldValues"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.FindAndInsertBeforeFirstOccurrence(System.String,System.String,System.String[])">
            <summary>
            Find and insert before first occurrence
            </summary>
            <param name="text"></param>
            <param name="textInsert"></param>
            <param name="oldValues"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.JoinStringFor``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Combine the given set with a specific string as the delimiter. <br />
            将给定的集合以特定的字符串为分隔符进行合并。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="separator"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.Split(System.String,System.String)">
            <summary>
            Cut the string according to the given separator. <br />
            根据给定的分隔符号对字符串进行切割。
            </summary>
            <param name="that"></param>
            <param name="separator">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.SplitInWords(System.String)">
            <summary>
            Split on all non-word characters,
            and returns an array of all the words.<br />
            拆分所有非单词字符，并返回所有单词的数组。
            </summary>
            <param name="that"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.SplitInWordsLongerThan(System.String,System.Int32)">
            <summary>
            Split on all non-word characters,
            and returns an array of all the words greater than the specified length.<br />
            拆分所有非单词字符，并返回所有大于指定长度的单词的数组。
            </summary>
            <param name="that"></param>
            <param name="lengthAtLeast"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.SplitInLines(System.String)">
            <summary>
            Split text line by line.<br />
            逐行分割文本。
            </summary>
            <param name="that"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.SplitInLinesTyped``1(System.String)">
            <summary>
            Split the text line by line,
            and convert the resulting character array into instance data of the specified type. <br />
            逐行分割文本，
            并将分割所得的字符数组转换为指定类型的实例数据。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="that"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.SplitInLinesWithoutEmpty(System.String)">
            <summary>
            Split the text line by line and remove blank lines.<br />
            逐行分割文本，并移除空行。
            </summary>
            <param name="that"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.SplitByIndex(System.String,System.Int32)">
            <summary>
            Split the specified text according to the given index position,
            and return the two parts of the characters obtained as a tuple. <br />
            将指定文本根据给定的索引位置进行分割，
            并将分割所得的两部分字符以元组形式返回。
            </summary>
            <param name="that"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.SplitWordsByIndex(System.String,System.Int32)">
            <summary>
            The specified text is divided into words according to the given index position,
            and the two parts of characters obtained from the division are returned in the form of tuples. <br />
            将指定文本根据给定的索引位置按单词（word）进行分割，
            并将分割所得的两部分字符以元组形式返回。
            </summary>
            <param name="that"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.SplitTyped``1(System.String,System.Char)">
            <summary>
            Split the specified text according to the given delimiter,
            and convert the resulting character array into instance data of the specified type. <br />
            将指定文本根据给定的分隔符进行分割，并将分割所得的字符数组转换为指定类型的实例数据。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="that"></param>
            <param name="delimiter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.SplitTyped``1(System.String,System.String)">
            <summary>
            Split the specified text according to the given delimiter,
            and convert the resulting character array into instance data of the specified type. <br />
            将指定文本根据给定的分隔符进行分割，并将分割所得的字符数组转换为指定类型的实例数据。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="that"></param>
            <param name="delimiter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.TotalWords(System.String)">
            <summary>
            Count the total number of words. <br />
            统计总单词数。
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.LastWord(System.String)">
            <summary>
            Get the last word from the given text.<br />
            从给定的本文中获得最后一个单词。
            </summary>
            <param name="that"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.SecondWord(System.String)">
            <summary>
            Get the first word from the given text.<br />
            从给定的本文中获得第二个单词。
            </summary>
            <param name="that"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.FirstWord(System.String)">
            <summary>
            Get the first word from the given text.<br />
            从给定的本文中获得第一个单词。
            </summary>
            <param name="that"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.IndexOfWord(System.String,System.Int32)">
            <summary>
            Get the word at the specified position from the given text.<br />
            Find positive numbers from front to back,<br />
            and negative numbers from back to front.<br />
            从给定的本文中获得指定位置的单词。正数从前往后找，负数从后往前找。
            </summary>
            <param name="that"></param>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.AdditionalStringExtensions.IsSameWord(System.String,System.String)">
            <summary>
            Determine that the specified text has exactly the same words as the given text. <br />
            Note that the order between words will be ignored. <br />
            判断指定的文本与给定的文本具有完全相同的单词。<br />
            注意，单词之间的顺序将被忽略。
            </summary>
            <param name="text"></param>
            <param name="check"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Text.CaseFormat">
            <summary>
            Case format<br />
            大小写格式化器
            </summary>
        </member>
        <member name="M:Cosmos.Text.CaseFormat.To(Cosmos.Text.CaseFormat.Style,System.String)">
            <summary>
            To<br />
            转换
            </summary>
            <param name="style"></param>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.CaseFormat.To(Humanizer.IStringTransformer,System.String,System.String)">
            <summary>
            To<br />
            转换
            </summary>
            <param name="transformer"></param>
            <param name="sequence"></param>
            <param name="joinOnStr"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Text.CaseFormat.LowerHyphen">
            <summary>
            Create a <see cref="T:Cosmos.Text.CaseFormat"/> instance with a hyphen splitter.
            </summary>
        </member>
        <member name="P:Cosmos.Text.CaseFormat.LowerUnderscore">
            <summary>
            Create a <see cref="T:Cosmos.Text.CaseFormat"/> instance with a lower underscore splitter.
            </summary>
        </member>
        <member name="P:Cosmos.Text.CaseFormat.UpperUnderscore">
            <summary>
            Create a <see cref="T:Cosmos.Text.CaseFormat"/> instance with a upper underscore splitter.
            </summary>
        </member>
        <member name="P:Cosmos.Text.CaseFormat.Instance">
            <summary>
            Create a <see cref="T:Cosmos.Text.CaseFormat"/> instance with a normal splitter.
            </summary>
        </member>
        <member name="P:Cosmos.Text.CaseFormat.Humanizer">
            <summary>
            Create a <see cref="T:Cosmos.Text.CaseFormat"/> instance in humanizer mode.
            </summary>
        </member>
        <member name="T:Cosmos.Text.CaseFormat.Style">
            <summary>
            Case format style<be />
            大小写格式化样式
            </summary>
        </member>
        <member name="F:Cosmos.Text.CaseFormat.Style.LOWER_CAMEL">
            <summary>
            Lower camel<br />
            小写与驼峰
            </summary>
        </member>
        <member name="F:Cosmos.Text.CaseFormat.Style.LOWER_CAMEL_WITH_WHITESPACE">
            <summary>
            Lower camel with whitespace<br />
            小写与驼峰，并使用空格分隔
            </summary>
        </member>
        <member name="F:Cosmos.Text.CaseFormat.Style.LOWER_HYPHEN">
            <summary>
            Lower hyphen<br />
            小写与横线
            </summary>
        </member>
        <member name="F:Cosmos.Text.CaseFormat.Style.LOWER_UNDERSCORE">
            <summary>
            Lower underscore<br />
            小写与下划线
            </summary>
        </member>
        <member name="F:Cosmos.Text.CaseFormat.Style.UPPER_CAMEL">
            <summary>
            Upper camel<br />
            大写与驼峰
            </summary>
        </member>
        <member name="F:Cosmos.Text.CaseFormat.Style.UPPER_CAMEL_WITH_WHITESPACE">
            <summary>
            Upper camel with whitespace<br />
            大写与驼峰，并保留空格分隔
            </summary>
        </member>
        <member name="F:Cosmos.Text.CaseFormat.Style.UPPER_UNDERSCORE">
            <summary>
            Upper underscore<br />
            大写与下划线
            </summary>
        </member>
        <member name="T:Cosmos.Text.ConvertibleStringVal">
            <summary>
            The structure used for string parsing can more easily convert the string
            to the type specified by the user through the Cosmos.Conversions and XConv toolset. <br />
            用于字符串解析的结构体可以通过 Cosmos.Conversions 和 XConv 工具集更轻松地将字符串转换为用户指定的类型。
            </summary>
            <summary>
            The structure used for string parsing can more easily convert the string
            to the type specified by the user through the Cosmos.Conversions and XConv toolset. <br />
            用于字符串解析的结构体可以通过 Cosmos.Conversions 和 XConv 工具集更轻松地将字符串转换为用户指定的类型。
            </summary>
            <summary>
            The structure used for string parsing can more easily convert the string
            to the type specified by the user through the Cosmos.Conversions and XConv toolset. <br />
            用于字符串解析的结构体可以通过 Cosmos.Conversions 和 XConv 工具集更轻松地将字符串转换为用户指定的类型。
            </summary>
            <summary>
            The structure used for string parsing can more easily convert the string
            to the type specified by the user through the Cosmos.Conversions and XConv toolset. <br />
            用于字符串解析的结构体可以通过 Cosmos.Conversions 和 XConv 工具集更轻松地将字符串转换为用户指定的类型。
            </summary>
            <summary>
            The structure used for string parsing can more easily convert the string
            to the type specified by the user through the Cosmos.Conversions and XConv toolset. <br />
            用于字符串解析的结构体可以通过 Cosmos.Conversions 和 XConv 工具集更轻松地将字符串转换为用户指定的类型。
            </summary>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.System#IConvertible#GetTypeCode">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.System#IConvertible#ToBoolean(System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.System#IConvertible#ToByte(System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.System#IConvertible#ToChar(System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.System#IConvertible#ToDateTime(System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.System#IConvertible#ToDecimal(System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.System#IConvertible#ToDouble(System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.System#IConvertible#ToInt16(System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.System#IConvertible#ToInt32(System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.System#IConvertible#ToInt64(System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.System#IConvertible#ToSByte(System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.System#IConvertible#ToSingle(System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.System#IConvertible#ToString(System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.System#IConvertible#ToUInt16(System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.System#IConvertible#ToUInt32(System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.System#IConvertible#ToUInt64(System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.Of``1(``0)">
            <summary>
            Create a new <see cref="T:Cosmos.Text.ConvertibleStringVal"/> with a specified object. <br />
            使用指定的对象创建一个新的 <see cref="T:Cosmos.Text.ConvertibleStringVal"/>。
            </summary>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.Of(System.String)">
            <summary>
            Create a new <see cref="T:Cosmos.Text.ConvertibleStringVal"/> with a specified string. <br />
            使用指定的字符串创建一个新的 <see cref="T:Cosmos.Text.ConvertibleStringVal"/>。
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.As``1">
            <summary>
            Convert <see cref="T:Cosmos.Text.ConvertibleStringVal"/> to the given type <br />
            将 ConvertibleStringVal 转换为给定的类型
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.As``1(``0)">
            <summary>
            Convert <see cref="T:Cosmos.Text.ConvertibleStringVal"/> to the given type <br />
            将 ConvertibleStringVal 转换为给定的类型
            </summary>
            <param name="defaultVal"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.As``1(Cosmos.Conversions.CastingContext,``0)">
            <summary>
            Convert <see cref="T:Cosmos.Text.ConvertibleStringVal"/> to the given type <br />
            将 ConvertibleStringVal 转换为给定的类型
            </summary>
            <param name="context"></param>
            <param name="defaultVal"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.As``1(System.IFormatProvider)">
            <summary>
            Convert <see cref="T:Cosmos.Text.ConvertibleStringVal"/> to the given type <br />
            将 ConvertibleStringVal 转换为给定的类型
            </summary>
            <param name="formatProvider"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.As``1(System.Globalization.NumberStyles,``0)">
            <summary>
            Convert <see cref="T:Cosmos.Text.ConvertibleStringVal"/> to the given type <br />
            将 ConvertibleStringVal 转换为给定的类型
            </summary>
            <param name="numberStyles"></param>
            <param name="defaultVal"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.As``1(System.Globalization.DateTimeStyles,``0)">
            <summary>
            Convert <see cref="T:Cosmos.Text.ConvertibleStringVal"/> to the given type <br />
            将 ConvertibleStringVal 转换为给定的类型
            </summary>
            <param name="dateTimeStyles"></param>
            <param name="defaultVal"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.As``1(Cosmos.Text.IgnoreCase,``0,System.String,System.Nullable{System.Globalization.NumberStyles},System.Nullable{System.Globalization.DateTimeStyles},System.IFormatProvider)">
            <summary>
            Convert <see cref="T:Cosmos.Text.ConvertibleStringVal"/> to the given type <br />
            将 ConvertibleStringVal 转换为给定的类型
            </summary>
            <param name="ignoreCase"></param>
            <param name="defaultVal"></param>
            <param name="format"></param>
            <param name="numberStyles"></param>
            <param name="dateTimeStyles"></param>
            <param name="formatProvider"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.Is``1">
            <summary>
            Determine whether <see cref="T:Cosmos.Text.ConvertibleStringVal"/> can be converted to a given type <br />
            判断 ConvertibleStringVal 是否可转换为给定的类型
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.Is``1(System.IFormatProvider)">
            <summary>
            Determine whether <see cref="T:Cosmos.Text.ConvertibleStringVal"/> can be converted to a given type <br />
            判断 ConvertibleStringVal 是否可转换为给定的类型
            </summary>
            <param name="provider"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.Is``1(System.Globalization.NumberStyles)">
            <summary>
            Determine whether <see cref="T:Cosmos.Text.ConvertibleStringVal"/> can be converted to a given type <br />
            判断 ConvertibleStringVal 是否可转换为给定的类型
            </summary>
            <param name="numberStyles"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.Is``1(System.Globalization.DateTimeStyles)">
            <summary>
            Determine whether <see cref="T:Cosmos.Text.ConvertibleStringVal"/> can be converted to a given type <br />
            判断 ConvertibleStringVal 是否可转换为给定的类型
            </summary>
            <param name="dateTimeStyles"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.Is``1(Cosmos.Text.IgnoreCase,System.Action{``0},System.String,System.Nullable{System.Globalization.NumberStyles},System.Nullable{System.Globalization.DateTimeStyles},System.IFormatProvider)">
            <summary>
            Determine whether <see cref="T:Cosmos.Text.ConvertibleStringVal"/> can be converted to a given type <br />
            判断 ConvertibleStringVal 是否可转换为给定的类型
            </summary>
            <param name="ignoreCase"></param>
            <param name="action"></param>
            <param name="format"></param>
            <param name="numberStyle"></param>
            <param name="dateTimeStyle"></param>
            <param name="formatProvider"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.Is``1(``0@)">
            <summary>
            Determine whether <see cref="T:Cosmos.Text.ConvertibleStringVal"/> can be converted to a given type <br />
            判断 ConvertibleStringVal 是否可转换为给定的类型
            </summary>
            <param name="result"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.Is``1(System.IFormatProvider,``0@)">
            <summary>
            Determine whether <see cref="T:Cosmos.Text.ConvertibleStringVal"/> can be converted to a given type <br />
            判断 ConvertibleStringVal 是否可转换为给定的类型
            </summary>
            <param name="provider"></param>
            <param name="result"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.Equals(Cosmos.Text.ConvertibleStringVal,System.StringComparison)">
            <summary>
            Equals
            </summary>
            <param name="other"></param>
            <param name="comparison"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.Equals(Cosmos.Text.ConvertibleStringVal)">
            <summary>
            Equals
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.Equals(System.String,System.StringComparison)">
            <summary>
            Equals
            </summary>
            <param name="other"></param>
            <param name="comparison"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.Equals(System.String)">
            <summary>
            Equals
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.ToString">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.ValueStringMetaObject.BindConvert(System.Dynamic.ConvertBinder)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.AsOptionals``1">
            <summary>
            Maybe
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.AsOptionals``1(System.Func{``0,System.Boolean})">
            <summary>
            Maybe
            </summary>
            <param name="condition"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.AsOptionals``1(``0)">
            <summary>
            Maybe
            </summary>
            <param name="defaultVal"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.AsOptionals``1(System.Func{``0,System.Boolean},``0)">
            <summary>
            Maybe
            </summary>
            <param name="condition"></param>
            <param name="defaultVal"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.MaybeValue``1">
            <summary>
            Maybe value
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.MaybeValue``1(System.Func{``0,System.Boolean})">
            <summary>
            Maybe value
            </summary>
            <param name="condition"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.MaybeValue``1(``0)">
            <summary>
            Maybe value
            </summary>
            <param name="defaultVal"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringVal.MaybeValue``1(System.Func{``0,System.Boolean},``0)">
            <summary>
            Maybe value
            </summary>
            <param name="condition"></param>
            <param name="defaultVal"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Text.ConvertibleStringVal.Parser">
            <summary>
            Internal value string parser
            </summary>
        </member>
        <member name="T:Cosmos.Text.ConvertibleStringValExtensions">
            <summary>
            Cosmos ConvertibleStringVal extensions <br />
            可转换性字符串值扩展
            </summary>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringValExtensions.TryGetValue``2(System.Collections.Generic.IReadOnlyDictionary{``0,Cosmos.Text.ConvertibleStringVal},``0,``1@)">
            <summary>
            Try get value from dictionary <br />
            尝试从字典中获得值
            </summary>
            <param name="source"></param>
            <param name="key"></param>
            <param name="value"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringValExtensions.TryGetValue``2(System.Collections.Generic.IReadOnlyDictionary{``0,Cosmos.Text.ConvertibleStringVal},``0,System.IFormatProvider,``1@)">
            <summary>
            Try get value from dictionary <br />
            尝试从字典中获得值
            </summary>
            <param name="source"></param>
            <param name="key"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringValExtensions.Add``2(System.Collections.Generic.IDictionary{``0,Cosmos.Text.ConvertibleStringVal},``0,``1)">
            <summary>
            Add <br />
            添加
            </summary>
            <param name="target"></param>
            <param name="key"></param>
            <param name="value"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Text.ConvertibleStringValExtensions.Set``2(System.Collections.Generic.IDictionary{``0,Cosmos.Text.ConvertibleStringVal},``0,``1)">
            <summary>
            Set <br />
            设置
            </summary>
            <param name="target"></param>
            <param name="key"></param>
            <param name="value"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Cosmos.Text.EncodingServices.EncodingExtensions">
            <summary>
            Encoding Extensions <br />
            Encoding 扩展
            </summary>
        </member>
        <member name="M:Cosmos.Text.EncodingServices.EncodingExtensions.GetSafeString(System.Text.Encoding,System.ReadOnlySpan{System.Byte})">
            <summary>
            Get the string safely <br />
            安全地获取字符串
            </summary>
            <param name="encoding"></param>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.EncodingServices.EncodingExtensions.GetSafeString(System.Text.Encoding,System.Byte*,System.Int32)">
            <summary>
            Get the string safely <br />
            安全地获取字符串
            </summary>
            <param name="encoding"></param>
            <param name="bytes"></param>
            <param name="byteCount"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.EncodingServices.EncodingExtensions.GetSafeString(System.Text.Encoding,System.Byte[])">
            <summary>
            Get the string safely <br />
            安全地获取字符串
            </summary>
            <param name="encoding"></param>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.EncodingServices.EncodingExtensions.GetSafeString(System.Text.Encoding,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Get the string safely <br />
            安全地获取字符串
            </summary>
            <param name="encoding"></param>
            <param name="bytes"></param>
            <param name="index"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.EncodingServices.EncodingExtensions.GetSafeString(System.Text.Encoding,System.Buffers.ReadOnlySequence{System.Byte}@)">
            <summary>
            Get the string safely <br />
            安全地获取字符串
            </summary>
            <param name="encoding"></param>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Text.EncodingServices.EncodingFactory">
            <summary>
            Cosmos <see cref="T:System.Text.Encoding"/> factory.<br />
            Encoding 工厂 <br />
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.ASMO_708">
            <summary>
            Arabic (ASMO 708)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.BIG5">
            <summary>
            Chinese Traditional (Big5)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.CP1025">
            <summary>
            IBM EBCDIC (Cyrillic Serbian-Bulgarian)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.CP866">
            <summary>
            Cyrillic (DOS)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.CP875">
            <summary>
            IBM EBCDIC (Greek Modern)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.CSISO2022JP">
            <summary>
            Japanese (JIS-Allow 1 byte Kana)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.DOS_720">
            <summary>
            Arabic (DOS)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.DOS_862">
            <summary>
            Hebrew (DOS)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.EUC_CN">
            <summary>
            Chinese Simplified (EUC)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.EUC_JP">
            <summary>
            Japanese (EUC)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.EUC_JP_1990">
            <summary>
            Japanese (JIS 0208-1990 and 0212-1990)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.EUC_KR">
            <summary>
            Korean (EUC)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.GB18030">
            <summary>
            Chinese Simplified (GB18030)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.GB2312">
            <summary>
            Chinese Simplified (GB2312)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.HZ_GB_2312">
            <summary>
            Chinese Simplified (HZ)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM00858">
            <summary>
            OEM Multilingual Latin I
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM00924">
            <summary>
            IBM Latin-1
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM01047">
            <summary>
            IBM Latin-1
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM01140">
            <summary>
            IBM EBCDIC (US-Canada-Euro)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM01141">
            <summary>
            IBM EBCDIC (Germany-Euro)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM01142">
            <summary>
            IBM EBCDIC (Denmark-Norway-Euro)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM01143">
            <summary>
            IBM EBCDIC (Finland-Sweden-Euro)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM01144">
            <summary>
            IBM EBCDIC (Italy-Euro)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM01145">
            <summary>
            IBM EBCDIC (Spain-Euro)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM01146">
            <summary>
            IBM EBCDIC (UK-Euro)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM01147">
            <summary>
            IBM EBCDIC (France-Euro)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM01148">
            <summary>
            IBM EBCDIC (International-Euro)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM01149">
            <summary>
            IBM EBCDIC (Icelandic-Euro)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM037">
            <summary>
            IBM EBCDIC (US-Canada)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM1026">
            <summary>
            IBM EBCDIC (Turkish Latin-5)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM273">
            <summary>
            IBM EBCDIC (Germany)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM277">
            <summary>
            IBM EBCDIC (Denmark-Norway)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM278">
            <summary>
            IBM EBCDIC (Finland-Sweden)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM280">
            <summary>
            IBM EBCDIC (Italy)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM284">
            <summary>
            IBM EBCDIC (Spain)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM285">
            <summary>
            IBM EBCDIC (UK)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM290">
            <summary>
            IBM EBCDIC (Japanese katakana)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM297">
            <summary>
            IBM EBCDIC (France)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM420">
            <summary>
            IBM EBCDIC (Arabic)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM423">
            <summary>
            IBM EBCDIC (Greek)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM424">
            <summary>
            IBM EBCDIC (Hebrew)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM437">
            <summary>
            OEM United States
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM500">
            <summary>
            IBM EBCDIC (International)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM737">
            <summary>
            Greek (DOS)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM775">
            <summary>
            Baltic (DOS)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM850">
            <summary>
            Western European (DOS)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM852">
            <summary>
            Central European (DOS)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM855">
            <summary>
            OEM Cyrillic
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM857">
            <summary>
            Turkish (DOS)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM860">
            <summary>
            Portuguese (DOS)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM861">
            <summary>
            Icelandic (DOS)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM863">
            <summary>
            French Canadian (DOS)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM864">
            <summary>
            Arabic (864)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM865">
            <summary>
            Nordic (DOS)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM869">
            <summary>
            Greek, Modern (DOS)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM870">
            <summary>
            IBM EBCDIC (Multilingual Latin-2)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM871">
            <summary>
            IBM EBCDIC (Icelandic)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM880">
            <summary>
            IBM EBCDIC (Cyrillic Russian)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM905">
            <summary>
            IBM EBCDIC (Turkish)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.IBM_THAI">
            <summary>
            IBM EBCDIC (Thai)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.ISO_2022_JP">
            <summary>
            Japanese (JIS)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.ISO_2022_JP_AllowOneByteKana">
            <summary>
            Japanese (JIS-Allow 1 byte Kana - SO/SI)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.ISO_2022_KR">
            <summary>
            Korean (ISO)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.ISO_8859_1">
            <summary>
            Western European (ISO)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.ISO_8859_13">
            <summary>
            Estonian (ISO)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.ISO_8859_15">
            <summary>
            Latin 9 (ISO)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.ISO_8859_2">
            <summary>
            Central European (ISO)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.ISO_8859_3">
            <summary>
            Latin 3 (ISO)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.ISO_8859_4">
            <summary>
            Baltic (ISO)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.ISO_8859_5">
            <summary>
            Cyrillic (ISO)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.ISO_8859_6">
            <summary>
            Arabic (ISO)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.ISO_8859_7">
            <summary>
            Greek (ISO)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.ISO_8859_8">
            <summary>
            Hebrew (ISO-Visual)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.ISO_8859_8_I">
            <summary>
            Hebrew (ISO-Logical)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.ISO_8859_9">
            <summary>
            Turkish (ISO)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.JOHAB">
            <summary>
            Korean (Johab)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.KOI8_R">
            <summary>
            Cyrillic (KOI8-R)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.KOI8_U">
            <summary>
            Cyrillic (KOI8-U)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.KS_C_5601_1987">
            <summary>
            Korean
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.MACINTOSH">
            <summary>
            Western European (Mac)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.SHIFT_JIS">
            <summary>
            Japanese (Shift-JIS)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.US_ASCII">
            <summary>
            US-ASCII
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.UTF_16">
            <summary>
            Unicode
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.UTF_16BE">
            <summary>
            Unicode (Big-Endian)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.UTF_32">
            <summary>
            Unicode (UTF-32)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.UTF_32BE">
            <summary>
            Unicode (UTF-32 Big-Endian)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.UTF_7">
            <summary>
            Unicode (UTF-7)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.UTF_8">
            <summary>
            Unicode (UTF-8)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.WINDOWS_1250">
            <summary>
            Central European (Windows)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.WINDOWS_1251">
            <summary>
            Cyrillic (Windows)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.WINDOWS_1252">
            <summary>
            Western European (Windows)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.WINDOWS_1253">
            <summary>
            Greek (Windows)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.WINDOWS_1254">
            <summary>
            Turkish (Windows)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.WINDOWS_1255">
            <summary>
            Hebrew (Windows)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.WINDOWS_1256">
            <summary>
            Arabic (Windows)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.WINDOWS_1257">
            <summary>
            Baltic (Windows)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.WINDOWS_1258">
            <summary>
            Vietnamese (Windows)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.WINDOWS_874">
            <summary>
            Thai (Windows)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_CHINESE_CNS">
            <summary>
            Chinese Traditional (CNS)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_CHINESE_ETEN">
            <summary>
            Chinese Traditional (Eten)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_CP20001">
            <summary>
            TCA Taiwan
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_CP20003">
            <summary>
            IBM5550 Taiwan
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_CP20004">
            <summary>
            TeleText Taiwan
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_CP20005">
            <summary>
            Wang Taiwan
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_CP20261">
            <summary>
            T.61
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_CP20269">
            <summary>
            ISO-6937
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_CP20936">
            <summary>
            Chinese Simplified (GB2312-80)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_CP20949">
            <summary>
            Korean Wansung
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_CP50227">
            <summary>
            Chinese Simplified (ISO-2022)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_EBCDIC_KOREANEXTENDED">
            <summary>
            IBM EBCDIC (Korean Extended)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_EUROPA">
            <summary>
            Europa
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_IA5">
            <summary>
            Western European (IA5)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_IA5_GERMAN">
            <summary>
            German (IA5)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_IA5_NORWEGIAN">
            <summary>
            Norwegian (IA5)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_IA5_SWEDISH">
            <summary>
            Swedish (IA5)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_ISCII_AS">
            <summary>
            ISCII Assamese
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_ISCII_BE">
            <summary>
            ISCII Bengali
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_ISCII_DE">
            <summary>
            ISCII Devanagari
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_ISCII_GU">
            <summary>
            ISCII Gujarati
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_ISCII_KA">
            <summary>
            ISCII Kannada
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_ISCII_MA">
            <summary>
            ISCII Malayalam
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_ISCII_OR">
            <summary>
            ISCII Oriya
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_ISCII_PA">
            <summary>
            ISCII Punjabi
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_ISCII_TA">
            <summary>
            ISCII Tamil
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_ISCII_TE">
            <summary>
            ISCII Telugu
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_MAC_ARABIC">
            <summary>
            Arabic (Mac)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_MAC_CE">
            <summary>
            Central European (Mac)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_MAC_CHINESESIMP">
            <summary>
            Chinese Simplified (Mac)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_MAC_CHINESETRAD">
            <summary>
            Chinese Traditional (Mac)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_MAC_CROATIAN">
            <summary>
            Croatian (Mac)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_MAC_CYRILLIC">
            <summary>
            Cyrillic (Mac)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_MAC_GREEK">
            <summary>
            Greek (Mac)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_MAC_HEBREW">
            <summary>
            Hebrew (Mac)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_MAC_ICELANDIC">
            <summary>
            Icelandic (Mac)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_MAC_JAPANESE">
            <summary>
            Japanese (Mac)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_MAC_KOREAN">
            <summary>
            Korean (Mac)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_MAC_ROMANIAN">
            <summary>
            Romanian (Mac)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_MAC_THAI">
            <summary>
            Thai (Mac)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_MAC_TURKISH">
            <summary>
            Turkish (Mac)
            </summary>
        </member>
        <member name="P:Cosmos.Text.EncodingServices.EncodingFactory.X_MAC_UKRAINIAN">
            <summary>
            Ukrainian (Mac)
            </summary>
        </member>
        <member name="T:Cosmos.Text.RegexUtils.RegexCache">
            <summary>
            Regex cache <br />
            正则缓存
            </summary>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexCache.Key.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexCache.Get(System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Gets the already cached value for a key, or calculates the value and stores it. <br />
            获取已缓存的键值，或计算该值并存储它。
            </summary>
            <param name="pattern">The pattern used to create the regular expression.</param>
            <param name="options">The options for regex.</param>
            <returns>The calculated or cached value.</returns>
        </member>
        <member name="T:Cosmos.Text.RegexUtils.Regexs">
            <summary>
            Regex Utilities<br />
            表达式工具集
            </summary>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.Regexs.IsMatch(System.String,System.String)">
            <summary>
            Verify that the input matches the pattern <br />
            验证输入与模式是否匹配
            </summary>
            <param name="input">输入字符串</param>
            <param name="pattern">模式字符串</param>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.Regexs.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Verify that the input matches the pattern <br />
            验证输入与模式是否匹配
            </summary>
            <param name="input">输入的字符串</param>
            <param name="pattern">模式字符串</param>
            <param name="options">筛选条件,比如是否忽略大小写</param>
        </member>
        <member name="T:Cosmos.Text.RegexUtils.RegexTypes">
            <summary>
            This class is used to fake an enum. You'll be able to use it as an enum. <br />
            此类用于伪造枚举。 您将能够将其用作枚举。
            <para>
            Note: type save enum, found on stackoverflow: http://stackoverflow.com/a/424414/603309
            </para>
            </summary>
        </member>
        <member name="P:Cosmos.Text.RegexUtils.RegexTypes.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Cosmos.Text.RegexUtils.RegexTypes.Value">
            <summary>
            Values
            </summary>
        </member>
        <member name="F:Cosmos.Text.RegexUtils.RegexTypes.Url">
            <summary>
            URL
            </summary>
        </member>
        <member name="F:Cosmos.Text.RegexUtils.RegexTypes.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="T:Cosmos.Text.RegexUtils.RegexVerbalExpressions">
            <summary>
            Regex verbal expressions <br />
            正则表达式
            </summary>
        </member>
        <member name="P:Cosmos.Text.RegexUtils.RegexVerbalExpressions.DefaultExpression">
            <summary>
            Returns a default instance of RegexVerbalExpressions
            having the Multiline option enabled <br />
            返回启用了多行选项的 RegexVerbalExpressions 的默认实例
            </summary>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Add(Cosmos.Text.RegexUtils.RegexTypes)">
            <summary>
            Add
            </summary>
            <param name="regexTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Add(System.String,System.Boolean)">
            <summary>
            Add
            </summary>
            <param name="value"></param>
            <param name="sanitize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.StartOfLine(System.Boolean)">
            <summary>
            Start of line
            </summary>
            <param name="enable"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.EndOfLine(System.Boolean)">
            <summary>
            End of line
            </summary>
            <param name="enable"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Then(System.String,System.Boolean)">
            <summary>
            Then
            </summary>
            <param name="value"></param>
            <param name="sanitize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Then(Cosmos.Text.RegexUtils.RegexTypes)">
            <summary>
            Then
            </summary>
            <param name="regexTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Find(System.String)">
            <summary>
            Find
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Maybe(System.String,System.Boolean)">
            <summary>
            Maybe
            </summary>
            <param name="value"></param>
            <param name="sanitize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Maybe(Cosmos.Text.RegexUtils.RegexTypes)">
            <summary>
            Maybe
            </summary>
            <param name="regexTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Anything">
            <summary>
            Anything
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.AnythingBut(System.String,System.Boolean)">
            <summary>
            Anything but...
            </summary>
            <param name="value"></param>
            <param name="sanitize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Something">
            <summary>
            Something
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.SomethingBut(System.String,System.Boolean)">
            <summary>
            Something but...
            </summary>
            <param name="value"></param>
            <param name="sanitize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Replace(System.String)">
            <summary>
            Replace
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.LineBreak">
            <summary>
            Line break
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Br">
            <summary>
            Br
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Tab">
            <summary>
            Tab
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Word">
            <summary>
            Word
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.AnyOf(System.String,System.Boolean)">
            <summary>
            Any of
            </summary>
            <param name="value"></param>
            <param name="sanitize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Any(System.String)">
            <summary>
            Any
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Range(System.Object[])">
            <summary>
            Range
            </summary>
            <param name="arguments"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Multiple(System.String,System.Boolean)">
            <summary>
            Multiple
            </summary>
            <param name="value"></param>
            <param name="sanitize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Or(Cosmos.Text.RegexUtils.RegexTypes)">
            <summary>
            Or
            </summary>
            <param name="regexTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Or(System.String,System.Boolean)">
            <summary>
            Or
            </summary>
            <param name="value"></param>
            <param name="sanitize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.BeginCapture">
            <summary>
            Begin capture
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.BeginCapture(System.String)">
            <summary>
            Begin capture
            </summary>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.EndCapture">
            <summary>
            End capture
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.RepeatPrevious(System.Int32)">
            <summary>
            Repeat previous
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.RepeatPrevious(System.Int32,System.Int32)">
            <summary>
            Repeat previous
            </summary>
            <param name="n"></param>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.AddModifier(System.Char)">
            <summary>
            Add modifier
            </summary>
            <param name="modifier"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.RemoveModifier(System.Char)">
            <summary>
            Remove modifier
            </summary>
            <param name="modifier"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.WithAnyCase(System.Boolean)">
            <summary>
            With any case
            </summary>
            <param name="enable"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.UseOneLineSearchOption(System.Boolean)">
            <summary>
            Use one lne search option
            </summary>
            <param name="enable"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.WithOptions(System.Text.RegularExpressions.RegexOptions)">
            <summary>
            With options
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Sanitize(System.String)">
            <summary>
            Sanitize
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Test(System.String)">
            <summary>
            Test
            </summary>
            <param name="toTest"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.IsMatch(System.String)">
            <summary>
            Is match
            </summary>
            <param name="toTest"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.ToRegex">
            <summary>
            To regex
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.ToString">
            <summary>
            To string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Capture(System.String,System.String)">
            <summary>
            Capture
            </summary>
            <param name="toTest"></param>
            <param name="groupName"></param>
            <returns></returns>
        </member>
    </members>
</doc>
